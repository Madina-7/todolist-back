{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/todo-list/todo-list.component.ts","./src/app/components/todo-list/todo-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'to-do-list';\n}\n","<div class='container'>\n  <todo-list></todo-list>\n<div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoListComponent } from './components/todo-list/todo-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n//describe the class and after declare it \n@Component({\n  selector: 'todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n  todos: any\n  test: string[]\n  new_item: string = '';\n\n  constructor(private http: HttpClient) {\n\n    this.http.get('/api/task').subscribe(\n      data => {\n        console.log(data)\n        this.todos = data;\n      },\n      error => {\n        console.error('There was an error!', error)\n      }\n    )\n  }\n\n\n  ngOnInit(): void { }\n\n  addItem() {\n    if (this.new_item) {\n\n      let newitem = {\n        'title': this.new_item,\n        'completed': false\n      }\n      this.http.post('/api/task', newitem).subscribe(\n        data => {\n          // retrieve updated list \n          this.http.get('/api/task').subscribe(\n            data => {\n              console.log(data)\n              // send to html by replacing content of this.todos\n              this.todos = data;\n            },\n            error => {\n              console.error('There was an error!', error)\n            }\n          )\n        },\n        error => {\n          console.error('There was an error!', error)\n        }\n      )\n    }\n  }\n\n  updateItem(item) {\n    this.http.put('/api/task',item).subscribe(\n      data => {\n        // retrieve updated list \n        this.http.get('/api/task').subscribe(\n          data => {\n            console.log(data)\n            // send to html by replacing content of this.todos\n            this.todos = data;\n          },\n          error => {\n            console.error('There was an error!', error)\n          }\n        )\n      },\n      error => {\n        console.error('There was an error!', error)\n      }\n    )\n  }\n\n  removeItem(todo) {\n    // send id of task that needs to be deleted as query param\n    let httpParams = new HttpParams().set('taskid', todo._id);\n    let options = { params: httpParams };\n\n    this.http.delete('/api/task', options).subscribe(\n      data => {\n        // retrieve updated list \n        this.http.get('/api/task').subscribe(\n          data => {\n            console.log(data)\n            // send to html by replacing content of this.todos\n            this.todos = data;\n          },\n          error => {\n            console.error('There was an error!', error)\n          }\n        )\n      },\n      error => {\n        console.error('There was an error!', error)\n      }\n    )\n\n  }\n}","\n<body>\n\n<p>Let's Do This</p>\n\n<input type='text' [(ngModel)]=\"new_item\" class='todo-input' placeholder=\"write here what you want to accomplish\">\n<button class='add' (click)='addItem()'>Add</button>\n\n\n<div class='todo-item' *ngFor='let todo of todos;'>\n\n    <div class='todo-item-left'>\n        <input class='checkbox' [(ngModel)]=\"todo.completed\" (ngModelChange)=\"updateItem(todo)\"  type='checkbox'>\n        <div [ngClass]=\"{'crossed': todo.completed}\">{{ todo.title }}</div>\n    </div>\n    <div class='remove-item'>\n        <button class='remove-button' (click)='removeItem(todo)'>&times;</button>\n    </div>\n\n</div>\n\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}